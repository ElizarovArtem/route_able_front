/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TrainersImport } from './routes/trainers'
import { Route as MenuImport } from './routes/menu'
import { Route as PrivateRouteImport } from './routes/_private/route'
import { Route as IndexImport } from './routes/index'
import { Route as PrivateLkImport } from './routes/_private/lk'

// Create/Update Routes

const TrainersRoute = TrainersImport.update({
  id: '/trainers',
  path: '/trainers',
  getParentRoute: () => rootRoute,
} as any)

const MenuRoute = MenuImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRouteRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PrivateLkRoute = PrivateLkImport.update({
  id: '/lk',
  path: '/lk',
  getParentRoute: () => PrivateRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/trainers': {
      id: '/trainers'
      path: '/trainers'
      fullPath: '/trainers'
      preLoaderRoute: typeof TrainersImport
      parentRoute: typeof rootRoute
    }
    '/_private/lk': {
      id: '/_private/lk'
      path: '/lk'
      fullPath: '/lk'
      preLoaderRoute: typeof PrivateLkImport
      parentRoute: typeof PrivateRouteImport
    }
  }
}

// Create and export the route tree

interface PrivateRouteRouteChildren {
  PrivateLkRoute: typeof PrivateLkRoute
}

const PrivateRouteRouteChildren: PrivateRouteRouteChildren = {
  PrivateLkRoute: PrivateLkRoute,
}

const PrivateRouteRouteWithChildren = PrivateRouteRoute._addFileChildren(
  PrivateRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PrivateRouteRouteWithChildren
  '/menu': typeof MenuRoute
  '/trainers': typeof TrainersRoute
  '/lk': typeof PrivateLkRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PrivateRouteRouteWithChildren
  '/menu': typeof MenuRoute
  '/trainers': typeof TrainersRoute
  '/lk': typeof PrivateLkRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_private': typeof PrivateRouteRouteWithChildren
  '/menu': typeof MenuRoute
  '/trainers': typeof TrainersRoute
  '/_private/lk': typeof PrivateLkRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/menu' | '/trainers' | '/lk'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/menu' | '/trainers' | '/lk'
  id: '__root__' | '/' | '/_private' | '/menu' | '/trainers' | '/_private/lk'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivateRouteRoute: typeof PrivateRouteRouteWithChildren
  MenuRoute: typeof MenuRoute
  TrainersRoute: typeof TrainersRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivateRouteRoute: PrivateRouteRouteWithChildren,
  MenuRoute: MenuRoute,
  TrainersRoute: TrainersRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_private",
        "/menu",
        "/trainers"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_private": {
      "filePath": "_private/route.tsx",
      "children": [
        "/_private/lk"
      ]
    },
    "/menu": {
      "filePath": "menu.tsx"
    },
    "/trainers": {
      "filePath": "trainers.tsx"
    },
    "/_private/lk": {
      "filePath": "_private/lk.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
